import customtkinter
import subprocess
import json
import os
from PIL import Image, ImageTk
from tkinter import filedialog
from CTkMessagebox import CTkMessagebox

# Empêche la résolution automatique de Windows
customtkinter.deactivate_automatic_dpi_awareness()

# Chemin des images et des fichiers
icon_path = os.path.join("penautomate_images", "penautomate.ico")
image_path = os.path.join("penautomate_images", "penautomate.png")
save_path = os.path.join("penautomate_menu", "pentestreport", "company_logo.png")
json_path = os.path.join("penautomate_menu", "pentestreport", "pentestreport.json")

# Fenêtre root
root = customtkinter.CTk()
root.geometry("600x750")
root.title("PenAutomate")
root.iconbitmap(icon_path)
root.resizable(width=False, height=False)

# Centre la fenêtre au lancement
root.update_idletasks()
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()

window_width = root.winfo_width()
window_height = root.winfo_height()

x_pos = (screen_width - window_width) // 2
y_pos = (screen_height - window_height) // 2

root.geometry("+{}+{}".format(x_pos, y_pos))    

# Importe la configuration du thème Light / Dark depuis le fichier themes.json
with open('themes.json', 'r') as file:
    config = json.load(file)

# Apparence du thème
customtkinter.set_appearance_mode(config["appearance_mode"])
customtkinter.set_default_color_theme("dark-blue")

# Fonctions du menu

# COMPANY NAME
# NEXT
def next():
    company_name = entry.get()

    # Store the information in the JSON file
    data = {"company_name": company_name}

    with open(json_path, "w") as json_file:
        json.dump(data, json_file)

# BACK
def back():
    root.destroy()
    subprocess.run(["python", "menu2.py"])

# Fonction pour parcourir le fichier du logo
def browse_logo():
    file_path = filedialog.askopenfilename(title="Select Company Logo", filetypes=[("Image files", "*.png;*.jpg;*.jpeg")])
    if file_path:
        # Charger l'image
        image = Image.open(file_path)

        # Vérifier la taille de l'image
        if image.size != (300, 300):
            CTkMessagebox(title="Error", message="Format image has to be 300x300 and extension image has to be .png or .jpg/.jpeg", icon="warning")
            return

        # Afficher l'image dans le label
        logo_image = ImageTk.PhotoImage(image)

        # Configure le label avec l'image
        logo_label.configure(image=logo_image)

        # Sauvegarder l'image au même emplacement que le script avec un nom spécifique
        image.save(save_path, "PNG")
        print(f"Logo file selected, resized, and saved: {save_path}")

# Frame du menu
frame = customtkinter.CTkFrame(master=root)
frame.pack(fill="y", expand=True, side="top")

# Titre de la frame
label = customtkinter.CTkLabel(master=frame, text="\U0001f47e   Start a Pentest Report with PenAutomate   \U0001f47e", font=("Lato", 24, "bold"))
label.pack(pady=12, padx=10)

label = customtkinter.CTkLabel(master=frame, text="Use this tool ethically for penetration testing. Conducting tests and generating reports on companies requires explicit agreement or consent from the entity. Users are solely responsible for compliance with laws and ethical standards.", font=("Lato", 10, "bold"), wraplength=400)
label.pack()

# Séparateur
label = customtkinter.CTkButton(master=frame, text="", width=550, hover=False, height=10, fg_color="#333")
label.pack(pady=10, padx=10, anchor="center")

label = customtkinter.CTkLabel(master=frame, text="Enter company name : ", font=("Lato", 16, "bold"))
label.pack(pady=10, padx=10, anchor="w")

entry = customtkinter.CTkEntry(master=frame, placeholder_text="Enter company name")
entry.pack(pady=10, padx=10, anchor="w")


label = customtkinter.CTkLabel(master=frame, text="Enter company logo (300x300): ", font=("Lato", 16, "bold"))
label.pack(pady=10, padx=10, anchor="w")

# Label pour afficher le logo de la société (déclaré ici en tant que variable globale)
logo_label = customtkinter.CTkLabel(master=frame, text="\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",font=("Lato", 16, "bold"))
logo_label.pack()

# Bouton "Browse" pour sélectionner le logo
browse_button = customtkinter.CTkButton(master=frame, text="Import", command=browse_logo)
browse_button.pack(pady=10, padx=10)

# Progress bar
progressbar = customtkinter.CTkProgressBar(master=frame, width=500)
progressbar.pack(pady=10, padx=10)
progressbar.set(0)

# Séparateur
label = customtkinter.CTkButton(master=frame, text="", width=550, hover=False, height=10, fg_color="#333")
label.pack(pady=20, padx=10)

# BOUTON BACK
back_button = customtkinter.CTkButton(master=frame, text="Back", command=back, font=("Lato", 14, "bold"), fg_color="#22B14C", hover_color="#1A873A")
back_button.pack(side="left", padx=15)

# BOUTON NEXT
next_button = customtkinter.CTkButton(master=frame, text="Next", command=next, font=("Lato", 14, "bold"), fg_color="#22B14C", hover_color="#1A873A")
next_button.pack(side="right", padx=15)

# Main Loop
root.mainloop()
