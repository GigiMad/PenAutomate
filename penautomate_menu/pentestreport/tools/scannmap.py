
import subprocess
import json
import re
import os

json_input_path = os.path.join("penautomate_menu", "pentestreport", "pentestdata.json")
json_output_path = os.path.join("penautomate_menu", "pentestreport", "pentestreport2.json")

def run_nmap_scan(target):
    """
    Exécute un scan Nmap sur la cible spécifiée en utilisant le script vulners et enregistre les résultats.
    
    Args:
        target (str): Adresse IP ou nom d'hôte à scanner.
    
    Returns:
        dict: Dictionnaire contenant les résultats du scan pour la cible.
    """
    command = ['nmap', '-sV', '--script', 'vulners', target]
    results = {}
    try:
        scan_output = subprocess.run(command, capture_output=True, text=True, check=True).stdout
        service_pattern = re.compile(r'((\d+/tcp|udp)\s+open\s+([^\n]+))|(CVE-\d{4}-\d+)')
        matches = service_pattern.findall(scan_output)

        current_service = None
        for match in matches:
            if match[1]:  # Nouveau service trouvé
                current_service = match[2].strip()
                results[current_service] = []
            if match[3]:  # CVE trouvé pour le service courant
                if current_service:
                    results[current_service].append(match[3])

    except subprocess.CalledProcessError as e:
        results = {"error": f"Échec de l'exécution de nmap sur {target}: {e}"}

    return results

# Charger les adresses IP du fichier JSON
ip_data = {}
with open(json_input_path, 'r') as file:
    ip_data = json.load(file)

all_results = {}
error_count = 0

# Scanner chaque IP
for ip_key in ['IP1', 'IP2', 'IP3']:
    ip = ip_data.get(ip_key)
    if ip:
        scan_result = run_nmap_scan(ip)
        if scan_result:
            all_results[ip] = scan_result
        else:
            error_count += 1

# Sauvegarder tous les résultats dans un fichier JSON unique
with open(json_output_path, 'w') as file:
    json.dump(all_results, file, indent=4)

if error_count == len(ip_data):
    print("Erreur : Aucune IP disponible pour le scan.")
else:
    print(f"Tous les résultats des scans sont enregistrés dans {json_output_path}")
