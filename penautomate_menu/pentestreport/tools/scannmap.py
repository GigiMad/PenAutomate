
import subprocess
import json
import re
import os

json_path = os.path.join("penautomate_menu", "pentestreport", "pentestreport2.json")

def run_nmap_scan(target):
    """
    Runs an nmap scan on the specified target using the vulners script and saves the results in a JSON file.
    
    Args:
    target (str): The IP address or hostname to scan.
    
    Returns:
    str: Path to the JSON file containing the scan results.
    """
    # Constructing the nmap command with the Vulners script
    command = ['nmap', '-sV', '--script', 'vulners', target]
    
    # Initialize a dictionary to hold the results
    results = {}
    
    # Running the nmap scan
    try:
        scan_output = subprocess.run(command, capture_output=True, text=True, check=True).stdout
        
        # Regular expression to extract service and potential CVEs
        service_pattern = re.compile(r'((\d+/tcp|udp)\s+open\s+([^\n]+))|(CVE-\d{4}-\d+)')
        matches = service_pattern.findall(scan_output)
        
        current_service = None
        for match in matches:
            if match[1]:  # New service found
                current_service = match[1] + " " + match[2]
                results[current_service] = []
            if match[3]:  # CVE found for the current service
                if current_service:
                    results[current_service].append(match[3])
        
        # Save results to a JSON file
        with open(json_path, 'w') as file:
            json.dump(results, file, indent=4)
        
        return json_path
    except subprocess.CalledProcessError as e:
        return f"Failed to run nmap: {e}"


# Example usage:
json_file_path = run_nmap_scan("192.168.92.131")
print(f"Results saved to {json_file_path}")
