# Importing necessary libraries
import requests
import socket
import json

def fetch_information(domain):
    try:
        # Try to fetch HTTP request headers for the domain
        req = requests.get("https://" + domain)
        headers = req.headers

        # Obtain the IP address associated with the domain
        ip_addr = socket.gethostbyname(domain)

        # Make a request to obtain information about the IP address
        req2 = requests.get(f"https://ipinfo.io/{ip_addr}/json")
        data = json.loads(req2.text)

        # Gathered API information, managing missing data
        return {
            "headers": headers,
            "ip_address": ip_addr,
            "hostname": data.get('hostname', 'Not available'),
            "city": data.get('city', 'Not available'),
            "region": data.get('region', 'Not available'),
            "country": data.get('country', 'Not available'),
            "location": data.get('loc', 'Not available'),
            "organization": data.get('org', 'Not available'),
            "postal": data.get('postal', 'Not available'),
            "timezone": data.get('timezone', 'Not available')
        }
    except requests.exceptions.RequestException as e:
        # Handle request errors
        return f"Failed to retrieve data for {domain}: {str(e)}"

def get_domain_information(domain):
    if not domain.startswith("www."):
        # Add 'www.' if not already present and try to fetch the information
        www_domain = "www." + domain
        info = fetch_information(www_domain)
        if isinstance(info, dict):
            return info
        else:
            # If adding 'www.' fails, try without 'www.'
            return fetch_information(domain)
    else:
        # Try directly if 'www.' is already present
        return fetch_information(domain)

def format_information(info, domain):
    if isinstance(info, dict):
        # Format and display the gathered information
        print(f"IP address of {domain} is {info['ip_address']}\n")
        print(f"Hostname of {domain} is {info['hostname']}")
        print(f"City of {domain} is {info['city']}")
        print(f"Region of {domain} is {info['region']}")
        print(f"Country of {domain} is {info['country']}")
        print(f"Location coordinates of {domain} are {info['location']}")
        print(f"Organization of {domain} is {info['organization']}")
        print(f"Postal code of {domain} is {info['postal']}")
        print(f"Timezone of {domain} is {info['timezone']}")
    else:
        # Display the error
        print(info)

# Example usage
domain = input("Enter domain: ")
info = get_domain_information(domain)
format_information(info, domain)
